1. The mindat.org and linked data:
After looking at the mindat.org, it provides a series of APIs to access the data. 
However, the data is not provided in linked data form, hence it's not possible to query the data using SPARQL.
The first step is to convert the data into linked data form, which is RDF format (Turtle, .ttl).

2. Ontology design:
For simplicity, the ontology is only about to describe the minerals, and the properties of the minerals.
The relationship between the minerals is not considered in this ontology.
Also, the localities and occurrences are not considered in this ontology.
Finally, the ontology is all about the minerals, and the properties of the minerals.

3. Collect data from mindat.org:
By using the APIs provided by mindat.org, we can collect the data from the website.
Currently, all IMA approved minerals (>5000 types) are collected, and the data is stored in a JSON file.

4. Convert the data into RDF format:
The first step is to infer the datatype of each property.
Then, the data is converted into RDF format, and stored in a Turtle file.
The turtle file is written with Jinja2 template synatx, and the data is inserted into the template.

5. Host and query the RDF data:
The RDF data is hosted using Apache Jena Fuseki. Fuseki is a SPARQL server, which can host the RDF data, and provide SPARQL endpoint.
The SPARQL: http://mindat.nodes.studio/#/dataset/mindat/query
The endpoint is protected by username and password:
username: mindat
password: mindat

6. Query examples:
PREFIX mindat: <http://www.mindat.org#>
PREFIX xsd: <http://www.w3.org/2001/XMLSchema#>
PREFIX owl: <http://www.w3.org/2002/07/owl#>
PREFIX rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
PREFIX rdfs: <http://www.w3.org/2000/01/rdf-schema#>

# Q1: query for all strunz10ed1 property
SELECT ?subject ?predicate ?object
WHERE {
  ?subject mindat:strunz10ed1 ?object .
  ?subject ?predicate ?object .
}

# Q2: query for all properties that mindat:mineral instances has
SELECT DISTINCT ?predicate
WHERE {
  ?subject rdf:type mindat:mineral .
  ?subject ?predicate ?object .
}

7. Files in explaination:
requirements.txt: the required python packages to run mindat.py
mindat.py: the script to collect data, infer data types and generate RDF file from mindat.org
mineral_rdf.ttl: the RDF file generated by mindat.py (quite large)
mineral_rdf_example.ttl: the RDF file generated by mindat.py (smaller, for understanding the structure)

Useful links for understanding properties:
https://api.mindat.org/schema/redoc/#tag/geomaterials/operation/geomaterials_retrieve
https://github.com/smrgeoinfo/How-to-Use-Mindat-API/blob/main/geomaterialfields.csv
